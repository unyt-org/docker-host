{"message":"unresolved import `byteorder`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/parser/body.rs","byte_start":175,"byte_end":184,"line_start":7,"line_end":7,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use byteorder::{BigEndian, LittleEndian, ReadBytesExt}; // 1.3.4","highlight_start":5,"highlight_end":14}],"label":"use of undeclared crate or module `byteorder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `byteorder`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/body.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse byteorder::{BigEndian, LittleEndian, ReadBytesExt}; // 1.3.4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `byteorder`\u001b[0m\n\n"}
{"message":"unused import: `regex::Regex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/compiler/mod.rs","byte_start":4,"byte_end":16,"line_start":1,"line_end":1,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use regex::Regex;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/compiler/mod.rs","byte_start":0,"byte_end":17,"line_start":1,"line_end":1,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use regex::Regex;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `regex::Regex`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compiler/mod.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse regex::Regex;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `std::any::TypeId`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/decompiler/mod.rs","byte_start":4,"byte_end":20,"line_start":1,"line_end":1,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use std::any::TypeId;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/decompiler/mod.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":1,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"use std::any::TypeId;","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::any::TypeId`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decompiler/mod.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::any::TypeId;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::datex_values::Primitive`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/decompiler/mod.rs","byte_start":46,"byte_end":76,"line_start":4,"line_end":4,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use crate::datex_values::Primitive;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/decompiler/mod.rs","byte_start":42,"byte_end":77,"line_start":4,"line_end":4,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use crate::datex_values::Primitive;","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::datex_values::Primitive`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decompiler/mod.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::datex_values::Primitive;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"variant `CLOSE_AND_STORE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":87,"byte_end":102,"line_start":4,"line_end":4,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tCLOSE_AND_STORE     = 0x01, // ;","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":87,"byte_end":102,"line_start":4,"line_end":4,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tCLOSE_AND_STORE     = 0x01, // ;","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"CloseAndStore","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CLOSE_AND_STORE` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:4:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CLOSE_AND_STORE     = 0x01, // ;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CloseAndStore`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"variant `SUBSCOPE_START` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":121,"byte_end":135,"line_start":5,"line_end":5,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSUBSCOPE_START      = 0x02, // (","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":121,"byte_end":135,"line_start":5,"line_end":5,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSUBSCOPE_START      = 0x02, // (","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"SubscopeStart","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SUBSCOPE_START` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:5:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SUBSCOPE_START      = 0x02, // (\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SubscopeStart`\u001b[0m\n\n"}
{"message":"variant `SUBSCOPE_END` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":155,"byte_end":167,"line_start":6,"line_end":6,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSUBSCOPE_END        = 0x03, // )","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":155,"byte_end":167,"line_start":6,"line_end":6,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSUBSCOPE_END        = 0x03, // )","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"SubscopeEnd","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SUBSCOPE_END` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:6:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SUBSCOPE_END        = 0x03, // )\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SubscopeEnd`\u001b[0m\n\n"}
{"message":"variant `CACHE_POINT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":189,"byte_end":200,"line_start":7,"line_end":7,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tCACHE_POINT         = 0x04, // cache dxb from this point on","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":189,"byte_end":200,"line_start":7,"line_end":7,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tCACHE_POINT         = 0x04, // cache dxb from this point on","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"CachePoint","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CACHE_POINT` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:7:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CACHE_POINT         = 0x04, // cache dxb from this point on\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CachePoint`\u001b[0m\n\n"}
{"message":"variant `CACHE_RESET` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":250,"byte_end":261,"line_start":8,"line_end":8,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tCACHE_RESET         = 0x05, // reset dxb scope cache","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":250,"byte_end":261,"line_start":8,"line_end":8,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tCACHE_RESET         = 0x05, // reset dxb scope cache","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"CacheReset","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CACHE_RESET` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:8:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CACHE_RESET         = 0x05, // reset dxb scope cache\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CacheReset`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_TEXT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":351,"byte_end":364,"line_start":11,"line_end":11,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_TEXT     = 0x10,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":351,"byte_end":364,"line_start":11,"line_end":11,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_TEXT     = 0x10,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"StdTypeText","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_TEXT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:11:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_TEXT     = 0x10,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeText`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_INT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":378,"byte_end":390,"line_start":12,"line_end":12,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_INT        = 0x11,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":378,"byte_end":390,"line_start":12,"line_end":12,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_INT        = 0x11,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"StdTypeInt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_INT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:12:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_INT        = 0x11,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeInt`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_FLOAT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":407,"byte_end":421,"line_start":13,"line_end":13,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSTD_TYPE_FLOAT      = 0x12,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":407,"byte_end":421,"line_start":13,"line_end":13,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSTD_TYPE_FLOAT      = 0x12,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"StdTypeFloat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_FLOAT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:13:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_FLOAT      = 0x12,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeFloat`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_BOOLEAN` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":436,"byte_end":452,"line_start":14,"line_end":14,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tSTD_TYPE_BOOLEAN    = 0x13,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":436,"byte_end":452,"line_start":14,"line_end":14,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tSTD_TYPE_BOOLEAN    = 0x13,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"StdTypeBoolean","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_BOOLEAN` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:14:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_BOOLEAN    = 0x13,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeBoolean`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_NULL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":465,"byte_end":478,"line_start":15,"line_end":15,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_NULL       = 0x14,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":465,"byte_end":478,"line_start":15,"line_end":15,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_NULL       = 0x14,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"StdTypeNull","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_NULL` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:15:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_NULL       = 0x14,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeNull`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_VOID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":494,"byte_end":507,"line_start":16,"line_end":16,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_VOID       = 0x15,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":494,"byte_end":507,"line_start":16,"line_end":16,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_VOID       = 0x15,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"StdTypeVoid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_VOID` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:16:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_VOID       = 0x15,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeVoid`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_BUFFER` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":523,"byte_end":538,"line_start":17,"line_end":17,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tSTD_TYPE_BUFFER     = 0x16,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":523,"byte_end":538,"line_start":17,"line_end":17,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tSTD_TYPE_BUFFER     = 0x16,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"StdTypeBuffer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_BUFFER` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:17:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_BUFFER     = 0x16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeBuffer`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_CODE_BLOCK` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":552,"byte_end":571,"line_start":18,"line_end":18,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tSTD_TYPE_CODE_BLOCK = 0x17,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":552,"byte_end":571,"line_start":18,"line_end":18,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tSTD_TYPE_CODE_BLOCK = 0x17,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"StdTypeCodeBlock","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_CODE_BLOCK` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:18:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_CODE_BLOCK = 0x17,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeCodeBlock`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_UNIT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":581,"byte_end":594,"line_start":19,"line_end":19,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_UNIT       = 0x18,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":581,"byte_end":594,"line_start":19,"line_end":19,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_UNIT       = 0x18,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"StdTypeUnit","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_UNIT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:19:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_UNIT       = 0x18,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeUnit`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_TIME` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":610,"byte_end":623,"line_start":20,"line_end":20,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_TIME       = 0x19,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":610,"byte_end":623,"line_start":20,"line_end":20,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_TIME       = 0x19,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"StdTypeTime","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_TIME` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:20:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_TIME       = 0x19,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeTime`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_URL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":639,"byte_end":651,"line_start":21,"line_end":21,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_URL        = 0x1a,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":639,"byte_end":651,"line_start":21,"line_end":21,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_URL        = 0x1a,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"StdTypeUrl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_URL` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:21:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_URL        = 0x1a,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeUrl`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_ARRAY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":669,"byte_end":683,"line_start":23,"line_end":23,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSTD_TYPE_ARRAY      = 0x1b,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":669,"byte_end":683,"line_start":23,"line_end":23,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSTD_TYPE_ARRAY      = 0x1b,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"StdTypeArray","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_ARRAY` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:23:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_ARRAY      = 0x1b,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeArray`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_OBJECT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":698,"byte_end":713,"line_start":24,"line_end":24,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tSTD_TYPE_OBJECT     = 0x1c,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":698,"byte_end":713,"line_start":24,"line_end":24,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tSTD_TYPE_OBJECT     = 0x1c,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"StdTypeObject","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_OBJECT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:24:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_OBJECT     = 0x1c,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeObject`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_SET` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":727,"byte_end":739,"line_start":25,"line_end":25,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_SET        = 0x1d,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":727,"byte_end":739,"line_start":25,"line_end":25,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_SET        = 0x1d,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"StdTypeSet","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_SET` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:25:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_SET        = 0x1d,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeSet`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_MAP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":756,"byte_end":768,"line_start":26,"line_end":26,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_MAP        = 0x1e,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":756,"byte_end":768,"line_start":26,"line_end":26,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_MAP        = 0x1e,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"StdTypeMap","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_MAP` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:26:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_MAP        = 0x1e,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeMap`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_TUPLE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":785,"byte_end":799,"line_start":27,"line_end":27,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSTD_TYPE_TUPLE      = 0x1f,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":785,"byte_end":799,"line_start":27,"line_end":27,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSTD_TYPE_TUPLE      = 0x1f,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"StdTypeTuple","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_TUPLE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:27:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_TUPLE      = 0x1f,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeTuple`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_FUNCTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":815,"byte_end":832,"line_start":29,"line_end":29,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tSTD_TYPE_FUNCTION   = 0x20,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":815,"byte_end":832,"line_start":29,"line_end":29,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tSTD_TYPE_FUNCTION   = 0x20,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"StdTypeFunction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_FUNCTION` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:29:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_FUNCTION   = 0x20,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeFunction`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_STREAM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":844,"byte_end":859,"line_start":30,"line_end":30,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tSTD_TYPE_STREAM     = 0x21,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":844,"byte_end":859,"line_start":30,"line_end":30,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tSTD_TYPE_STREAM     = 0x21,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"StdTypeStream","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_STREAM` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:30:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_STREAM     = 0x21,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeStream`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_ANY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":873,"byte_end":885,"line_start":31,"line_end":31,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_ANY        = 0x22,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":873,"byte_end":885,"line_start":31,"line_end":31,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSTD_TYPE_ANY        = 0x22,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"StdTypeAny","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_ANY` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:31:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_ANY        = 0x22,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeAny`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_ASSERTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":902,"byte_end":920,"line_start":32,"line_end":32,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tSTD_TYPE_ASSERTION  = 0x23,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":902,"byte_end":920,"line_start":32,"line_end":32,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tSTD_TYPE_ASSERTION  = 0x23,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"StdTypeAssertion","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_ASSERTION` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:32:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_ASSERTION  = 0x23,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeAssertion`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_TASK` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":931,"byte_end":944,"line_start":33,"line_end":33,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_TASK       = 0x24,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":931,"byte_end":944,"line_start":33,"line_end":33,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tSTD_TYPE_TASK       = 0x24,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"StdTypeTask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_TASK` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:33:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_TASK       = 0x24,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeTask`\u001b[0m\n\n"}
{"message":"variant `STD_TYPE_ITERATOR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":960,"byte_end":977,"line_start":34,"line_end":34,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tSTD_TYPE_ITERATOR   = 0x25,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":960,"byte_end":977,"line_start":34,"line_end":34,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tSTD_TYPE_ITERATOR   = 0x25,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"StdTypeIterator","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STD_TYPE_ITERATOR` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:34:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STD_TYPE_ITERATOR   = 0x25,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StdTypeIterator`\u001b[0m\n\n"}
{"message":"variant `VAR_RESULT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1047,"byte_end":1057,"line_start":38,"line_end":38,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_RESULT          = 0x30,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1047,"byte_end":1057,"line_start":38,"line_end":38,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_RESULT          = 0x30,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"VarResult","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_RESULT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:38:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_RESULT          = 0x30,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarResult`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_RESULT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1076,"byte_end":1090,"line_start":39,"line_end":39,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSET_VAR_RESULT      = 0x31,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1076,"byte_end":1090,"line_start":39,"line_end":39,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSET_VAR_RESULT      = 0x31,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"SetVarResult","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_RESULT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:39:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_RESULT      = 0x31,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarResult`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_RESULT_REFERENCE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1105,"byte_end":1129,"line_start":40,"line_end":40,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tSET_VAR_RESULT_REFERENCE = ","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1105,"byte_end":1129,"line_start":40,"line_end":40,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tSET_VAR_RESULT_REFERENCE = ","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"SetVarResultReference","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_RESULT_REFERENCE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:40:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_RESULT_REFERENCE = \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarResultReference`\u001b[0m\n\n"}
{"message":"variant `VAR_RESULT_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1146,"byte_end":1163,"line_start":42,"line_end":42,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tVAR_RESULT_ACTION   = 0x33,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1146,"byte_end":1163,"line_start":42,"line_end":42,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tVAR_RESULT_ACTION   = 0x33,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"VarResultAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_RESULT_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:42:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_RESULT_ACTION   = 0x33,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarResultAction`\u001b[0m\n\n"}
{"message":"variant `VAR_SUB_RESULT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1176,"byte_end":1190,"line_start":44,"line_end":44,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tVAR_SUB_RESULT      = 0x34,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1176,"byte_end":1190,"line_start":44,"line_end":44,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tVAR_SUB_RESULT      = 0x34,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"VarSubResult","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_SUB_RESULT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:44:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_SUB_RESULT      = 0x34,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarSubResult`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_SUB_RESULT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1205,"byte_end":1223,"line_start":45,"line_end":45,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tSET_VAR_SUB_RESULT  = 0x35,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1205,"byte_end":1223,"line_start":45,"line_end":45,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tSET_VAR_SUB_RESULT  = 0x35,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"SetVarSubResult","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_SUB_RESULT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:45:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_SUB_RESULT  = 0x35,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarSubResult`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_SUB_RESULT_REFERENCE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1234,"byte_end":1262,"line_start":46,"line_end":46,"column_start":2,"column_end":30,"is_primary":true,"text":[{"text":"\tSET_VAR_SUB_RESULT_REFERENCE = ","highlight_start":2,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1234,"byte_end":1262,"line_start":46,"line_end":46,"column_start":2,"column_end":30,"is_primary":true,"text":[{"text":"\tSET_VAR_SUB_RESULT_REFERENCE = ","highlight_start":2,"highlight_end":30}],"label":null,"suggested_replacement":"SetVarSubResultReference","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_SUB_RESULT_REFERENCE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:46:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_SUB_RESULT_REFERENCE = \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarSubResultReference`\u001b[0m\n\n"}
{"message":"variant `VAR_SUB_RESULT_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1279,"byte_end":1300,"line_start":48,"line_end":48,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tVAR_SUB_RESULT_ACTION = ","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1279,"byte_end":1300,"line_start":48,"line_end":48,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tVAR_SUB_RESULT_ACTION = ","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":"VarSubResultAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_SUB_RESULT_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:48:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_SUB_RESULT_ACTION = \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarSubResultAction`\u001b[0m\n\n"}
{"message":"variant `VAR_VOID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1318,"byte_end":1326,"line_start":51,"line_end":51,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tVAR_VOID            = 0x38,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1318,"byte_end":1326,"line_start":51,"line_end":51,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tVAR_VOID            = 0x38,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"VarVoid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_VOID` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:51:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_VOID            = 0x38,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarVoid`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_VOID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1347,"byte_end":1359,"line_start":52,"line_end":52,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSET_VAR_VOID        = 0x39,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1347,"byte_end":1359,"line_start":52,"line_end":52,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tSET_VAR_VOID        = 0x39,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"SetVarVoid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_VOID` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:52:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_VOID        = 0x39,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarVoid`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_VOID_REFERENCE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1376,"byte_end":1398,"line_start":53,"line_end":53,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tSET_VAR_VOID_REFERENCE =","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1376,"byte_end":1398,"line_start":53,"line_end":53,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tSET_VAR_VOID_REFERENCE =","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":"SetVarVoidReference","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_VOID_REFERENCE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:53:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_VOID_REFERENCE =\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarVoidReference`\u001b[0m\n\n"}
{"message":"variant `VAR_VOID_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1414,"byte_end":1429,"line_start":55,"line_end":55,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tVAR_VOID_ACTION     = 0x3b,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1414,"byte_end":1429,"line_start":55,"line_end":55,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tVAR_VOID_ACTION     = 0x3b,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"VarVoidAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_VOID_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:55:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_VOID_ACTION     = 0x3b,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarVoidAction`\u001b[0m\n\n"}
{"message":"variant `VAR_ORIGIN` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1444,"byte_end":1454,"line_start":57,"line_end":57,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_ORIGIN          = 0x3c,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1444,"byte_end":1454,"line_start":57,"line_end":57,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_ORIGIN          = 0x3c,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"VarOrigin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_ORIGIN` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:57:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_ORIGIN          = 0x3c,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarOrigin`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_ORIGIN` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1473,"byte_end":1487,"line_start":58,"line_end":58,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSET_VAR_ORIGIN      = 0x3d,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1473,"byte_end":1487,"line_start":58,"line_end":58,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tSET_VAR_ORIGIN      = 0x3d,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"SetVarOrigin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_ORIGIN` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:58:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_ORIGIN      = 0x3d,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarOrigin`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_ORIGIN_REFERENCE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1502,"byte_end":1526,"line_start":59,"line_end":59,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tSET_VAR_ORIGIN_REFERENCE = ","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1502,"byte_end":1526,"line_start":59,"line_end":59,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tSET_VAR_ORIGIN_REFERENCE = ","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"SetVarOriginReference","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_ORIGIN_REFERENCE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:59:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_ORIGIN_REFERENCE = \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarOriginReference`\u001b[0m\n\n"}
{"message":"variant `VAR_ORIGIN_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1543,"byte_end":1560,"line_start":61,"line_end":61,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tVAR_ORIGIN_ACTION   = 0x3f,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1543,"byte_end":1560,"line_start":61,"line_end":61,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tVAR_ORIGIN_ACTION   = 0x3f,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"VarOriginAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_ORIGIN_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:61:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_ORIGIN_ACTION   = 0x3f,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarOriginAction`\u001b[0m\n\n"}
{"message":"variant `VAR_IT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1573,"byte_end":1579,"line_start":63,"line_end":63,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tVAR_IT              = 0x40,","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1573,"byte_end":1579,"line_start":63,"line_end":63,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tVAR_IT              = 0x40,","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":"VarIt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_IT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:63:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_IT              = 0x40,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarIt`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_IT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1602,"byte_end":1612,"line_start":64,"line_end":64,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tSET_VAR_IT          = 0x41,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1602,"byte_end":1612,"line_start":64,"line_end":64,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tSET_VAR_IT          = 0x41,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"SetVarIt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_IT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:64:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_IT          = 0x41,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarIt`\u001b[0m\n\n"}
{"message":"variant `SET_VAR_IT_REFERENCE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1631,"byte_end":1651,"line_start":65,"line_end":65,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tSET_VAR_IT_REFERENCE= 0x42,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1631,"byte_end":1651,"line_start":65,"line_end":65,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tSET_VAR_IT_REFERENCE= 0x42,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":"SetVarItReference","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_VAR_IT_REFERENCE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:65:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_VAR_IT_REFERENCE= 0x42,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetVarItReference`\u001b[0m\n\n"}
{"message":"variant `VAR_IT_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1660,"byte_end":1673,"line_start":66,"line_end":66,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tVAR_IT_ACTION       = 0x43,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1660,"byte_end":1673,"line_start":66,"line_end":66,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tVAR_IT_ACTION       = 0x43,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"VarItAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_IT_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:66:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_IT_ACTION       = 0x43,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarItAction`\u001b[0m\n\n"}
{"message":"variant `VAR_REMOTE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1691,"byte_end":1701,"line_start":68,"line_end":68,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_REMOTE          = 0x44,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1691,"byte_end":1701,"line_start":68,"line_end":68,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_REMOTE          = 0x44,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"VarRemote","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_REMOTE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:68:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_REMOTE          = 0x44,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarRemote`\u001b[0m\n\n"}
{"message":"variant `VAR_REMOTE_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1721,"byte_end":1738,"line_start":70,"line_end":70,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tVAR_REMOTE_ACTION   = 0x45,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1721,"byte_end":1738,"line_start":70,"line_end":70,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tVAR_REMOTE_ACTION   = 0x45,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"VarRemoteAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_REMOTE_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:70:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_REMOTE_ACTION   = 0x45,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarRemoteAction`\u001b[0m\n\n"}
{"message":"variant `VAR_SENDER` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1750,"byte_end":1760,"line_start":71,"line_end":71,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_SENDER          = 0x46,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1750,"byte_end":1760,"line_start":71,"line_end":71,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_SENDER          = 0x46,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"VarSender","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_SENDER` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:71:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_SENDER          = 0x46,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarSender`\u001b[0m\n\n"}
{"message":"variant `VAR_CURRENT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1779,"byte_end":1790,"line_start":72,"line_end":72,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tVAR_CURRENT         = 0x47,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1779,"byte_end":1790,"line_start":72,"line_end":72,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tVAR_CURRENT         = 0x47,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"VarCurrent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_CURRENT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:72:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_CURRENT         = 0x47,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarCurrent`\u001b[0m\n\n"}
{"message":"variant `VAR_META` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1904,"byte_end":1912,"line_start":76,"line_end":76,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tVAR_META            = 0x4b,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1904,"byte_end":1912,"line_start":76,"line_end":76,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tVAR_META            = 0x4b,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"VarMeta","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_META` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:76:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_META            = 0x4b,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarMeta`\u001b[0m\n\n"}
{"message":"variant `VAR_PUBLIC` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1933,"byte_end":1943,"line_start":77,"line_end":77,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_PUBLIC          = 0x4c,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1933,"byte_end":1943,"line_start":77,"line_end":77,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tVAR_PUBLIC          = 0x4c,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"VarPublic","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_PUBLIC` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:77:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_PUBLIC          = 0x4c,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarPublic`\u001b[0m\n\n"}
{"message":"variant `VAR_THIS` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1962,"byte_end":1970,"line_start":78,"line_end":78,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tVAR_THIS            = 0x4d,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1962,"byte_end":1970,"line_start":78,"line_end":78,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tVAR_THIS            = 0x4d,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"VarThis","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_THIS` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:78:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_THIS            = 0x4d,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarThis`\u001b[0m\n\n"}
{"message":"variant `VAR_LOCATION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1991,"byte_end":2003,"line_start":79,"line_end":79,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tVAR_LOCATION        = 0x4e,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":1991,"byte_end":2003,"line_start":79,"line_end":79,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tVAR_LOCATION        = 0x4e,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"VarLocation","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_LOCATION` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:79:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_LOCATION        = 0x4e,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarLocation`\u001b[0m\n\n"}
{"message":"variant `VAR_ENV` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":2020,"byte_end":2027,"line_start":80,"line_end":80,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tVAR_ENV             = 0x4f,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":2020,"byte_end":2027,"line_start":80,"line_end":80,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tVAR_ENV             = 0x4f,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":"VarEnv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_ENV` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:80:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_ENV             = 0x4f,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarEnv`\u001b[0m\n\n"}
{"message":"variant `VAR_DEFAULT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":2049,"byte_end":2060,"line_start":81,"line_end":81,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tVAR_DEFAULT         = 0x48,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":2049,"byte_end":2060,"line_start":81,"line_end":81,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tVAR_DEFAULT         = 0x48,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"VarDefault","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `VAR_DEFAULT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:81:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VAR_DEFAULT         = 0x48,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `VarDefault`\u001b[0m\n\n"}
{"message":"variant `DELETE_POINTER` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":2642,"byte_end":2656,"line_start":97,"line_end":97,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tDELETE_POINTER      = 0x5c, // delete $aa","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":2642,"byte_end":2656,"line_start":97,"line_end":97,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tDELETE_POINTER      = 0x5c, // delete $aa","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"DeletePointer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DELETE_POINTER` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:97:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DELETE_POINTER      = 0x5c, // delete $aa\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DeletePointer`\u001b[0m\n\n"}
{"message":"variant `PLAIN_SCOPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":2859,"byte_end":2870,"line_start":102,"line_end":102,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tPLAIN_SCOPE         = 0x63, // scope xy;","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":2859,"byte_end":2870,"line_start":102,"line_end":102,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tPLAIN_SCOPE         = 0x63, // scope xy;","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"PlainScope","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `PLAIN_SCOPE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:102:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PLAIN_SCOPE         = 0x63, // scope xy;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `PlainScope`\u001b[0m\n\n"}
{"message":"variant `GET_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3481,"byte_end":3489,"line_start":117,"line_end":117,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tGET_TYPE            = 0x72, // type $aa","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3481,"byte_end":3489,"line_start":117,"line_end":117,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tGET_TYPE            = 0x72, // type $aa","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"GetType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GET_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:117:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GET_TYPE            = 0x72, // type $aa\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GetType`\u001b[0m\n\n"}
{"message":"variant `RESOLVE_RELATIVE_PATH` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3627,"byte_end":3648,"line_start":120,"line_end":120,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tRESOLVE_RELATIVE_PATH =","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3627,"byte_end":3648,"line_start":120,"line_end":120,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tRESOLVE_RELATIVE_PATH =","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":"ResolveRelativePath","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `RESOLVE_RELATIVE_PATH` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:120:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    RESOLVE_RELATIVE_PATH =\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ResolveRelativePath`\u001b[0m\n\n"}
{"message":"variant `EQUAL_VALUE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3828,"byte_end":3839,"line_start":127,"line_end":127,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tEQUAL_VALUE         = 0x80, // ==","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3828,"byte_end":3839,"line_start":127,"line_end":127,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tEQUAL_VALUE         = 0x80, // ==","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"EqualValue","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `EQUAL_VALUE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:127:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    EQUAL_VALUE         = 0x80, // ==\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `EqualValue`\u001b[0m\n\n"}
{"message":"variant `NOT_EQUAL_VALUE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3863,"byte_end":3878,"line_start":128,"line_end":128,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tNOT_EQUAL_VALUE     = 0x81, // ~=","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3863,"byte_end":3878,"line_start":128,"line_end":128,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tNOT_EQUAL_VALUE     = 0x81, // ~=","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"NotEqualValue","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NOT_EQUAL_VALUE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:128:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NOT_EQUAL_VALUE     = 0x81, // ~=\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NotEqualValue`\u001b[0m\n\n"}
{"message":"variant `NOT_EQUAL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3934,"byte_end":3943,"line_start":130,"line_end":130,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tNOT_EQUAL           = 0x83, // ~==","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":3934,"byte_end":3943,"line_start":130,"line_end":130,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tNOT_EQUAL           = 0x83, // ~==","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"NotEqual","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NOT_EQUAL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:130:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NOT_EQUAL           = 0x83, // ~==\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NotEqual`\u001b[0m\n\n"}
{"message":"variant `GREATER_EQUAL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4038,"byte_end":4051,"line_start":133,"line_end":133,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tGREATER_EQUAL       = 0x86, // >=","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4038,"byte_end":4051,"line_start":133,"line_end":133,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tGREATER_EQUAL       = 0x86, // >=","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"GreaterEqual","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GREATER_EQUAL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:133:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GREATER_EQUAL       = 0x86, // >=\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GreaterEqual`\u001b[0m\n\n"}
{"message":"variant `LESS_EQUAL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4073,"byte_end":4083,"line_start":134,"line_end":134,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tLESS_EQUAL          = 0x87, // <=","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4073,"byte_end":4083,"line_start":134,"line_end":134,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tLESS_EQUAL          = 0x87, // <=","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"LessEqual","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LESS_EQUAL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:134:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LESS_EQUAL          = 0x87, // <=\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LessEqual`\u001b[0m\n\n"}
{"message":"variant `INTERNAL_VAR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4583,"byte_end":4595,"line_start":152,"line_end":152,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tINTERNAL_VAR        = 0xa4, // #xyz   0x0000-0x00ff = variables passed on between scopes, 0x0100-0xfdff = normal variables, 0xfe00-0xffff = it variables (#it.0, #it.1, ...) for function arguments","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4583,"byte_end":4595,"line_start":152,"line_end":152,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tINTERNAL_VAR        = 0xa4, // #xyz   0x0000-0x00ff = variables passed on between scopes, 0x0100-0xfdff = normal variables, 0xfe00-0xffff = it variables (#it.0, #it.1, ...) for function arguments","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"InternalVar","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INTERNAL_VAR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:152:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INTERNAL_VAR        = 0xa4, // #xyz   0x0000-0x00ff = variables passed on between scopes, 0x0100-0xfdff = normal variables, 0xfe00-0x\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `InternalVar`\u001b[0m\n\n"}
{"message":"variant `SET_INTERNAL_VAR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4780,"byte_end":4796,"line_start":153,"line_end":153,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tSET_INTERNAL_VAR    = 0xa5, // #aa = ...","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4780,"byte_end":4796,"line_start":153,"line_end":153,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tSET_INTERNAL_VAR    = 0xa5, // #aa = ...","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"SetInternalVar","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_INTERNAL_VAR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:153:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_INTERNAL_VAR    = 0xa5, // #aa = ...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetInternalVar`\u001b[0m\n\n"}
{"message":"variant `INIT_INTERNAL_VAR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4822,"byte_end":4839,"line_start":154,"line_end":154,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tINIT_INTERNAL_VAR   = 0xa6, // #aa := ...","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4822,"byte_end":4839,"line_start":154,"line_end":154,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tINIT_INTERNAL_VAR   = 0xa6, // #aa := ...","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"InitInternalVar","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INIT_INTERNAL_VAR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:154:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INIT_INTERNAL_VAR   = 0xa6, // #aa := ...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `InitInternalVar`\u001b[0m\n\n"}
{"message":"variant `INTERNAL_VAR_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4865,"byte_end":4884,"line_start":155,"line_end":155,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tINTERNAL_VAR_ACTION = 0xa7, // #x += ...","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4865,"byte_end":4884,"line_start":155,"line_end":155,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tINTERNAL_VAR_ACTION = 0xa7, // #x += ...","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"InternalVarAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INTERNAL_VAR_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:155:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INTERNAL_VAR_ACTION = 0xa7, // #x += ...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `InternalVarAction`\u001b[0m\n\n"}
{"message":"variant `SET_INTERNAL_VAR_REFERENCE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4907,"byte_end":4933,"line_start":156,"line_end":156,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tSET_INTERNAL_VAR_REFERENCE =","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4907,"byte_end":4933,"line_start":156,"line_end":156,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tSET_INTERNAL_VAR_REFERENCE =","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":"SetInternalVarReference","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_INTERNAL_VAR_REFERENCE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:156:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_INTERNAL_VAR_REFERENCE =\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetInternalVarReference`\u001b[0m\n\n"}
{"message":"variant `SET_LABEL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4998,"byte_end":5007,"line_start":160,"line_end":160,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tSET_LABEL           = 0xaa, // $x = ...,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":4998,"byte_end":5007,"line_start":160,"line_end":160,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tSET_LABEL           = 0xaa, // $x = ...,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"SetLabel","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_LABEL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:160:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_LABEL           = 0xaa, // $x = ...,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetLabel`\u001b[0m\n\n"}
{"message":"variant `INIT_LABEL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5040,"byte_end":5050,"line_start":161,"line_end":161,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tINIT_LABEL          = 0xab, // $x := ...","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5040,"byte_end":5050,"line_start":161,"line_end":161,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tINIT_LABEL          = 0xab, // $x := ...","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"InitLabel","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INIT_LABEL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:161:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INIT_LABEL          = 0xab, // $x := ...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `InitLabel`\u001b[0m\n\n"}
{"message":"variant `LABEL_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5082,"byte_end":5094,"line_start":162,"line_end":162,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tLABEL_ACTION        = 0xac, // $x += ...","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5082,"byte_end":5094,"line_start":162,"line_end":162,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tLABEL_ACTION        = 0xac, // $x += ...","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"LabelAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LABEL_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:162:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LABEL_ACTION        = 0xac, // $x += ...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LabelAction`\u001b[0m\n\n"}
{"message":"variant `SET_POINTER` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5160,"byte_end":5171,"line_start":165,"line_end":165,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tSET_POINTER         = 0xae, // $aa = ...","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5160,"byte_end":5171,"line_start":165,"line_end":165,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tSET_POINTER         = 0xae, // $aa = ...","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"SetPointer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SET_POINTER` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:165:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SET_POINTER         = 0xae, // $aa = ...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SetPointer`\u001b[0m\n\n"}
{"message":"variant `INIT_POINTER` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5202,"byte_end":5214,"line_start":166,"line_end":166,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tINIT_POINTER        = 0xaf, // $aa := ...","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5202,"byte_end":5214,"line_start":166,"line_end":166,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tINIT_POINTER        = 0xaf, // $aa := ...","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"InitPointer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INIT_POINTER` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:166:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INIT_POINTER        = 0xaf, // $aa := ...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `InitPointer`\u001b[0m\n\n"}
{"message":"variant `POINTER_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5245,"byte_end":5259,"line_start":167,"line_end":167,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tPOINTER_ACTION      = 0xb0, // $aa += ...","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5245,"byte_end":5259,"line_start":167,"line_end":167,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tPOINTER_ACTION      = 0xb0, // $aa += ...","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"PointerAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `POINTER_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:167:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    POINTER_ACTION      = 0xb0, // $aa += ...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `PointerAction`\u001b[0m\n\n"}
{"message":"variant `CREATE_POINTER` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5288,"byte_end":5302,"line_start":168,"line_end":168,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tCREATE_POINTER      = 0xb1, // $$ ()","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5288,"byte_end":5302,"line_start":168,"line_end":168,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tCREATE_POINTER      = 0xb1, // $$ ()","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"CreatePointer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CREATE_POINTER` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:168:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CREATE_POINTER      = 0xb1, // $$ ()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CreatePointer`\u001b[0m\n\n"}
{"message":"variant `CHILD_GET` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5327,"byte_end":5336,"line_start":170,"line_end":170,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tCHILD_GET           = 0xb2,  // .y","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5327,"byte_end":5336,"line_start":170,"line_end":170,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tCHILD_GET           = 0xb2,  // .y","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"ChildGet","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CHILD_GET` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:170:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CHILD_GET           = 0xb2,  // .y\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ChildGet`\u001b[0m\n\n"}
{"message":"variant `CHILD_SET` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5363,"byte_end":5372,"line_start":171,"line_end":171,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tCHILD_SET           = 0xb3,  // .y = a","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5363,"byte_end":5372,"line_start":171,"line_end":171,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tCHILD_SET           = 0xb3,  // .y = a","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"ChildSet","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CHILD_SET` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:171:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CHILD_SET           = 0xb3,  // .y = a\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ChildSet`\u001b[0m\n\n"}
{"message":"variant `CHILD_SET_REFERENCE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5403,"byte_end":5422,"line_start":172,"line_end":172,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tCHILD_SET_REFERENCE = 0xb4,  // .y $= a","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5403,"byte_end":5422,"line_start":172,"line_end":172,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tCHILD_SET_REFERENCE = 0xb4,  // .y $= a","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"ChildSetReference","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CHILD_SET_REFERENCE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:172:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CHILD_SET_REFERENCE = 0xb4,  // .y $= a\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ChildSetReference`\u001b[0m\n\n"}
{"message":"variant `CHILD_ACTION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5444,"byte_end":5456,"line_start":173,"line_end":173,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tCHILD_ACTION        = 0xb5,  // .y += a, ...","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5444,"byte_end":5456,"line_start":173,"line_end":173,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tCHILD_ACTION        = 0xb5,  // .y += a, ...","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"ChildAction","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CHILD_ACTION` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:173:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CHILD_ACTION        = 0xb5,  // .y += a, ...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ChildAction`\u001b[0m\n\n"}
{"message":"variant `CHILD_GET_REF` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5490,"byte_end":5503,"line_start":174,"line_end":174,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tCHILD_GET_REF       = 0xb6,  // ->y","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5490,"byte_end":5503,"line_start":174,"line_end":174,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tCHILD_GET_REF       = 0xb6,  // ->y","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"ChildGetRef","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CHILD_GET_REF` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:174:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CHILD_GET_REF       = 0xb6,  // ->y\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ChildGetRef`\u001b[0m\n\n"}
{"message":"variant `INT_8` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5614,"byte_end":5619,"line_start":181,"line_end":181,"column_start":2,"column_end":7,"is_primary":true,"text":[{"text":"\tINT_8               = 0xc1, // byte","highlight_start":2,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5614,"byte_end":5619,"line_start":181,"line_end":181,"column_start":2,"column_end":7,"is_primary":true,"text":[{"text":"\tINT_8               = 0xc1, // byte","highlight_start":2,"highlight_end":7}],"label":null,"suggested_replacement":"Int8","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INT_8` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:181:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_8               = 0xc1, // byte\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int8`\u001b[0m\n\n"}
{"message":"variant `INT_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5651,"byte_end":5657,"line_start":182,"line_end":182,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_16              = 0xc2, ","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5651,"byte_end":5657,"line_start":182,"line_end":182,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_16              = 0xc2, ","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":"Int16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INT_16` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:182:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_16              = 0xc2, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int16`\u001b[0m\n\n"}
{"message":"variant `INT_32` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5681,"byte_end":5687,"line_start":183,"line_end":183,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_32              = 0xc3,","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5681,"byte_end":5687,"line_start":183,"line_end":183,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_32              = 0xc3,","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":"Int32","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INT_32` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:183:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_32              = 0xc3,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int32`\u001b[0m\n\n"}
{"message":"variant `INT_64` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5710,"byte_end":5716,"line_start":184,"line_end":184,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_64              = 0xc4,","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5710,"byte_end":5716,"line_start":184,"line_end":184,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_64              = 0xc4,","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":"Int64","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INT_64` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:184:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_64              = 0xc4,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int64`\u001b[0m\n\n"}
{"message":"variant `FLOAT_64` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5739,"byte_end":5747,"line_start":185,"line_end":185,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tFLOAT_64            = 0xc5,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5739,"byte_end":5747,"line_start":185,"line_end":185,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tFLOAT_64            = 0xc5,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"Float64","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `FLOAT_64` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:185:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FLOAT_64            = 0xc5,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Float64`\u001b[0m\n\n"}
{"message":"variant `SCOPE_BLOCK` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5913,"byte_end":5924,"line_start":191,"line_end":191,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tSCOPE_BLOCK         = 0xcb,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5913,"byte_end":5924,"line_start":191,"line_end":191,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tSCOPE_BLOCK         = 0xcb,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"ScopeBlock","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SCOPE_BLOCK` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:191:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SCOPE_BLOCK         = 0xcb,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ScopeBlock`\u001b[0m\n\n"}
{"message":"variant `FLOAT_AS_INT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5971,"byte_end":5983,"line_start":193,"line_end":193,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tFLOAT_AS_INT        = 0xcd,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":5971,"byte_end":5983,"line_start":193,"line_end":193,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tFLOAT_AS_INT        = 0xcd,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"FloatAsInt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `FLOAT_AS_INT` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:193:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FLOAT_AS_INT        = 0xcd,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `FloatAsInt`\u001b[0m\n\n"}
{"message":"variant `SHORT_TEXT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6000,"byte_end":6010,"line_start":194,"line_end":194,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tSHORT_TEXT          = 0xce, // string with max. 255 characters","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6000,"byte_end":6010,"line_start":194,"line_end":194,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tSHORT_TEXT          = 0xce, // string with max. 255 characters","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"ShortText","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SHORT_TEXT` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:194:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SHORT_TEXT          = 0xce, // string with max. 255 characters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ShortText`\u001b[0m\n\n"}
{"message":"variant `PERSON_ALIAS` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6065,"byte_end":6077,"line_start":196,"line_end":196,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tPERSON_ALIAS        = 0xcf,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6065,"byte_end":6077,"line_start":196,"line_end":196,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tPERSON_ALIAS        = 0xcf,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"PersonAlias","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `PERSON_ALIAS` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:196:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PERSON_ALIAS        = 0xcf,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `PersonAlias`\u001b[0m\n\n"}
{"message":"variant `PERSON_ALIAS_WILDCARD` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6094,"byte_end":6115,"line_start":197,"line_end":197,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tPERSON_ALIAS_WILDCARD = ","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6094,"byte_end":6115,"line_start":197,"line_end":197,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tPERSON_ALIAS_WILDCARD = ","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":"PersonAliasWildcard","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `PERSON_ALIAS_WILDCARD` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:197:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PERSON_ALIAS_WILDCARD = \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `PersonAliasWildcard`\u001b[0m\n\n"}
{"message":"variant `INSTITUTION_ALIAS` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6132,"byte_end":6149,"line_start":199,"line_end":199,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tINSTITUTION_ALIAS   = 0xd1,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6132,"byte_end":6149,"line_start":199,"line_end":199,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tINSTITUTION_ALIAS   = 0xd1,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"InstitutionAlias","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INSTITUTION_ALIAS` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:199:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INSTITUTION_ALIAS   = 0xd1,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `InstitutionAlias`\u001b[0m\n\n"}
{"message":"variant `INSTITUTION_ALIAS_WILDCARD` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6161,"byte_end":6187,"line_start":200,"line_end":200,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tINSTITUTION_ALIAS_WILDCARD = ","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6161,"byte_end":6187,"line_start":200,"line_end":200,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tINSTITUTION_ALIAS_WILDCARD = ","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":"InstitutionAliasWildcard","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INSTITUTION_ALIAS_WILDCARD` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:200:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INSTITUTION_ALIAS_WILDCARD = \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `InstitutionAliasWildcard`\u001b[0m\n\n"}
{"message":"variant `BOT_WILDCARD` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6233,"byte_end":6245,"line_start":203,"line_end":203,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tBOT_WILDCARD        = 0xd4,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6233,"byte_end":6245,"line_start":203,"line_end":203,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tBOT_WILDCARD        = 0xd4,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"BotWildcard","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `BOT_WILDCARD` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:203:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    BOT_WILDCARD        = 0xd4,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `BotWildcard`\u001b[0m\n\n"}
{"message":"variant `ENDPOINT_WILDCARD` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6292,"byte_end":6309,"line_start":206,"line_end":206,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tENDPOINT_WILDCARD   = 0xd6,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6292,"byte_end":6309,"line_start":206,"line_end":206,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tENDPOINT_WILDCARD   = 0xd6,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"EndpointWildcard","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ENDPOINT_WILDCARD` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:206:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ENDPOINT_WILDCARD   = 0xd6,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `EndpointWildcard`\u001b[0m\n\n"}
{"message":"variant `EXTENDED_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6418,"byte_end":6431,"line_start":211,"line_end":211,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tEXTENDED_TYPE       = 0xda, // <type/xy()>","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6418,"byte_end":6431,"line_start":211,"line_end":211,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tEXTENDED_TYPE       = 0xda, // <type/xy()>","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"ExtendedType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `EXTENDED_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:211:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    EXTENDED_TYPE       = 0xda, // <type/xy()>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ExtendedType`\u001b[0m\n\n"}
{"message":"variant `ARRAY_START` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6633,"byte_end":6644,"line_start":220,"line_end":220,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tARRAY_START         = 0xe0,  // array / or array","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6633,"byte_end":6644,"line_start":220,"line_end":220,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tARRAY_START         = 0xe0,  // array / or array","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"ArrayStart","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ARRAY_START` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:220:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ARRAY_START         = 0xe0,  // array / or array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ArrayStart`\u001b[0m\n\n"}
{"message":"variant `ARRAY_END` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6683,"byte_end":6692,"line_start":221,"line_end":221,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tARRAY_END           = 0xe1,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6683,"byte_end":6692,"line_start":221,"line_end":221,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tARRAY_END           = 0xe1,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"ArrayEnd","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ARRAY_END` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:221:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ARRAY_END           = 0xe1,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ArrayEnd`\u001b[0m\n\n"}
{"message":"variant `OBJECT_START` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6712,"byte_end":6724,"line_start":222,"line_end":222,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tOBJECT_START        = 0xe2,  // {}","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6712,"byte_end":6724,"line_start":222,"line_end":222,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tOBJECT_START        = 0xe2,  // {}","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"ObjectStart","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `OBJECT_START` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:222:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    OBJECT_START        = 0xe2,  // {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ObjectStart`\u001b[0m\n\n"}
{"message":"variant `OBJECT_END` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6748,"byte_end":6758,"line_start":223,"line_end":223,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tOBJECT_END          = 0xe3,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6748,"byte_end":6758,"line_start":223,"line_end":223,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tOBJECT_END          = 0xe3,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"ObjectEnd","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `OBJECT_END` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:223:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    OBJECT_END          = 0xe3,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ObjectEnd`\u001b[0m\n\n"}
{"message":"variant `TUPLE_START` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6777,"byte_end":6788,"line_start":224,"line_end":224,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tTUPLE_START         = 0xe4,  // (a,b,c)","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6777,"byte_end":6788,"line_start":224,"line_end":224,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tTUPLE_START         = 0xe4,  // (a,b,c)","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"TupleStart","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `TUPLE_START` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:224:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TUPLE_START         = 0xe4,  // (a,b,c)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `TupleStart`\u001b[0m\n\n"}
{"message":"variant `TUPLE_END` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6818,"byte_end":6827,"line_start":225,"line_end":225,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tTUPLE_END           = 0xe5,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6818,"byte_end":6827,"line_start":225,"line_end":225,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tTUPLE_END           = 0xe5,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"TupleEnd","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `TUPLE_END` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:225:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TUPLE_END           = 0xe5,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `TupleEnd`\u001b[0m\n\n"}
{"message":"variant `ELEMENT_WITH_KEY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6847,"byte_end":6863,"line_start":226,"line_end":226,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tELEMENT_WITH_KEY    = 0xe6,  // for object elements","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6847,"byte_end":6863,"line_start":226,"line_end":226,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tELEMENT_WITH_KEY    = 0xe6,  // for object elements","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"ElementWithKey","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ELEMENT_WITH_KEY` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:226:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ELEMENT_WITH_KEY    = 0xe6,  // for object elements\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ElementWithKey`\u001b[0m\n\n"}
{"message":"variant `ELEMENT_WITH_INT_KEY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6900,"byte_end":6920,"line_start":227,"line_end":227,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tELEMENT_WITH_INT_KEY= 0xe7,  // for array elements","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6900,"byte_end":6920,"line_start":227,"line_end":227,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tELEMENT_WITH_INT_KEY= 0xe7,  // for array elements","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":"ElementWithIntKey","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ELEMENT_WITH_INT_KEY` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:227:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ELEMENT_WITH_INT_KEY= 0xe7,  // for array elements\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ElementWithIntKey`\u001b[0m\n\n"}
{"message":"variant `ELEMENT_WITH_DYNAMIC_KEY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6952,"byte_end":6976,"line_start":228,"line_end":228,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tELEMENT_WITH_DYNAMIC_KEY = ","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":6952,"byte_end":6976,"line_start":228,"line_end":228,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tELEMENT_WITH_DYNAMIC_KEY = ","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"ElementWithDynamicKey","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ELEMENT_WITH_DYNAMIC_KEY` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:228:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ELEMENT_WITH_DYNAMIC_KEY = \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ElementWithDynamicKey`\u001b[0m\n\n"}
{"message":"variant `KEY_PERMISSION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":7034,"byte_end":7048,"line_start":230,"line_end":230,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tKEY_PERMISSION      = 0xe9,  // for object elements with permission prefix","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":7034,"byte_end":7048,"line_start":230,"line_end":230,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tKEY_PERMISSION      = 0xe9,  // for object elements with permission prefix","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"KeyPermission","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `KEY_PERMISSION` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:230:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    KEY_PERMISSION      = 0xe9,  // for object elements with permission prefix\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `KeyPermission`\u001b[0m\n\n"}
{"message":"variant `STOP_SYNC` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":7237,"byte_end":7246,"line_start":236,"line_end":236,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tSTOP_SYNC           = 0xf1, // </=","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":7237,"byte_end":7246,"line_start":236,"line_end":236,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tSTOP_SYNC           = 0xf1, // </=","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"StopSync","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STOP_SYNC` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:236:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STOP_SYNC           = 0xf1, // </=\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StopSync`\u001b[0m\n\n"}
{"message":"variant `STOP_STREAM` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":7317,"byte_end":7328,"line_start":239,"line_end":239,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tSTOP_STREAM         = 0xf3,  // </ stream","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global/binary_codes.rs","byte_start":7317,"byte_end":7328,"line_start":239,"line_end":239,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tSTOP_STREAM         = 0xf3,  // </ stream","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"StopStream","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STOP_STREAM` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global/binary_codes.rs:239:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STOP_STREAM         = 0xf3,  // </ stream\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StopStream`\u001b[0m\n\n"}
{"message":"variant `INT_8` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":22,"byte_end":27,"line_start":2,"line_end":2,"column_start":2,"column_end":7,"is_primary":true,"text":[{"text":"\tINT_8(i8),","highlight_start":2,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":22,"byte_end":27,"line_start":2,"line_end":2,"column_start":2,"column_end":7,"is_primary":true,"text":[{"text":"\tINT_8(i8),","highlight_start":2,"highlight_end":7}],"label":null,"suggested_replacement":"Int8","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INT_8` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/datex_values/mod.rs:2:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_8(i8),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int8`\u001b[0m\n\n"}
{"message":"variant `INT_16` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":34,"byte_end":40,"line_start":3,"line_end":3,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_16(i16),","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":34,"byte_end":40,"line_start":3,"line_end":3,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_16(i16),","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":"Int16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INT_16` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/datex_values/mod.rs:3:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_16(i16),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int16`\u001b[0m\n\n"}
{"message":"variant `INT_32` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":48,"byte_end":54,"line_start":4,"line_end":4,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_32(i32),","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":48,"byte_end":54,"line_start":4,"line_end":4,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_32(i32),","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":"Int32","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INT_32` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/datex_values/mod.rs:4:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_32(i32),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int32`\u001b[0m\n\n"}
{"message":"variant `INT_64` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":62,"byte_end":68,"line_start":5,"line_end":5,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_64(i64),","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":62,"byte_end":68,"line_start":5,"line_end":5,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_64(i64),","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":"Int64","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INT_64` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/datex_values/mod.rs:5:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_64(i64),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int64`\u001b[0m\n\n"}
{"message":"variant `FLOAT_64` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":76,"byte_end":84,"line_start":6,"line_end":6,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tFLOAT_64(f64),","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":76,"byte_end":84,"line_start":6,"line_end":6,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tFLOAT_64(f64),","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"Float64","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `FLOAT_64` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/datex_values/mod.rs:6:2\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FLOAT_64(f64),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Float64`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/parser/body.rs","byte_start":866,"byte_end":871,"line_start":28,"line_end":28,"column_start":119,"column_end":124,"is_primary":true,"text":[{"text":"\t\t\t\tyield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_8(value)})}","highlight_start":119,"highlight_end":124}],"label":"expected `i8`, found `u8`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/body.rs","byte_start":835,"byte_end":865,"line_start":28,"line_end":28,"column_start":88,"column_end":118,"is_primary":false,"text":[{"text":"\t\t\t\tyield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_8(value)})}","highlight_start":88,"highlight_end":118}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":22,"byte_end":27,"line_start":2,"line_end":2,"column_start":2,"column_end":7,"is_primary":true,"text":[{"text":"\tINT_8(i8),","highlight_start":2,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can convert a `u8` to an `i8` and panic if the converted value doesn't fit","code":null,"level":"help","spans":[{"file_name":"src/parser/body.rs","byte_start":871,"byte_end":871,"line_start":28,"line_end":28,"column_start":124,"column_end":124,"is_primary":true,"text":[{"text":"\t\t\t\tyield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_8(value)})}","highlight_start":124,"highlight_end":124}],"label":null,"suggested_replacement":".try_into().unwrap()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/body.rs:28:119\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                yield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_8(value)})}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `i8`, found `u8`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this enum variant are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: tuple variant defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/datex_values/mod.rs:2:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_8(i8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert a `u8` to an `i8` and panic if the converted value doesn't fit\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                yield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_8(value\u001b[0m\u001b[0m\u001b[38;5;10m.try_into().unwrap()\u001b[0m\u001b[0m)})}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                                                        \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/parser/body.rs","byte_start":1139,"byte_end":1144,"line_start":33,"line_end":33,"column_start":120,"column_end":125,"is_primary":true,"text":[{"text":"\t\t\t\tyield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_16(value)})}","highlight_start":120,"highlight_end":125}],"label":"expected `i16`, found `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/parser/body.rs","byte_start":1107,"byte_end":1138,"line_start":33,"line_end":33,"column_start":88,"column_end":119,"is_primary":false,"text":[{"text":"\t\t\t\tyield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_16(value)})}","highlight_start":88,"highlight_end":119}],"label":"arguments to this enum variant are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"tuple variant defined here","code":null,"level":"note","spans":[{"file_name":"src/datex_values/mod.rs","byte_start":34,"byte_end":40,"line_start":3,"line_end":3,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tINT_16(i16),","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"you can convert a `u16` to an `i16` and panic if the converted value doesn't fit","code":null,"level":"help","spans":[{"file_name":"src/parser/body.rs","byte_start":1144,"byte_end":1144,"line_start":33,"line_end":33,"column_start":125,"column_end":125,"is_primary":true,"text":[{"text":"\t\t\t\tyield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_16(value)})}","highlight_start":125,"highlight_end":125}],"label":null,"suggested_replacement":".try_into().unwrap()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/body.rs:33:120\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                yield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_16(value)})}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `i16`, found `u16`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this enum variant are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: tuple variant defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/datex_values/mod.rs:3:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_16(i16),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert a `u16` to an `i16` and panic if the converted value doesn't fit\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                yield Instruction {code:token, primitive_value: Option::Some(PrimitiveValue {value:datex_values::Primitive::INT_16(value\u001b[0m\u001b[0m\u001b[38;5;10m.try_into().unwrap()\u001b[0m\u001b[0m)})}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                                                         \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++\u001b[0m\n\n"}
{"message":"aborting due to 3 previous errors; 118 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors; 118 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0308, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0432.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
